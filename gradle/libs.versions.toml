[versions]
agp = "8.7.3" # only use the latest supported by KMP (https://kotlinlang.org/docs/multiplatform-compatibility-guide.html)
kotlin = "2.1.0"
kotlinxCoroutines = "1.9.0"
kotlinxSerialization = "1.7.3"
kotlinxDateTime = "0.6.1"

android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidxActivityCompose = "1.9.3"
androidxComposeMaterial3Adaptive = "1.0.0"
androidxComposeMaterial3AdaptiveNavigation = "1.3.1"
androidxLifecycle = "2.8.7"

assertk = "0.28.1"
compose = "1.7.5"
composePlugin = "1.7.1" # https://github.com/JetBrains/compose-jb
dataStore = "1.1.1"
dbtoolsKmpCommons = "1.1.0"
dbtoolsKmpCommonsCompose = "0.0.1"
dbtoolsKmpRoom = "9.0.0"
desugar = "2.1.3"
detekt = "1.23.7"
downloadPlugin = "5.6.0"
firebaseGitLive = "2.1.0"
jetbrainsLifecycle = "2.8.4"
jetbrainsNavigation = "2.8.0-alpha11"
kermit = "2.0.5"
koin = "4.0.0"
koinCompose = "4.0.0"
koinComposeViewModel = "4.0.0"
koinKsp = "1.3.1"
ktor = "3.0.2"
kover = "0.8.3"
ksp = "2.1.0-1.0.29"
mockK = "1.13.12"
mokoResources = "0.24.3"
okio = "3.9.1"
room = "2.7.0-alpha11"
sqlite = "2.5.0-alpha11"
versionsPlugin = "0.51.0"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
download = { id = "de.undercouch.download", version.ref = "downloadPlugin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "composePlugin" }
#koin = { id = "io.insert-koin:koin-ksp-compiler", version.ref = "koinKsp" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResources" }
room = { id = "androidx.room", version.ref = "room" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }

[libraries]
android-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivityCompose" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidxLifecycle" }

assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
compose-material3-adaptive = { group = "androidx.compose.material3.adaptive", name = "adaptive", version.ref = "androidxComposeMaterial3Adaptive" }
compose-material3-adaptive-navigation = { module = "androidx.compose.material3:material3-adaptive-navigation-suite", version.ref = "androidxComposeMaterial3AdaptiveNavigation" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
dbtools-kmp-commons = { module = "org.dbtools.kmp:kmp-commons", version.ref = "dbtoolsKmpCommons" }
dbtools-kmp-commons-compose = { module = "org.dbtools.kmp:kmp-commons-compose", version.ref = "dbtoolsKmpCommonsCompose" }
dbtools-kmp-room = { module = "org.dbtools:dbtools-room", version.ref = "dbtoolsKmpRoom" }
datastorePrefs = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }

firebase-gitlive-auth = { module = "dev.gitlive:firebase-auth", version.ref = "firebaseGitLive" }
firebase-gitlive-analytics = { module = "dev.gitlive:firebase-analytics", version.ref = "firebaseGitLive" }
firebase-gitlive-config = { module = "dev.gitlive:firebase-config", version.ref = "firebaseGitLive" }
firebase-gitlive-crashlytics = { module = "dev.gitlive:firebase-crashlytics", version.ref = "firebaseGitLive" }
firebase-gitlive-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "firebaseGitLive" }
firebase-gitlive-functions = { module = "dev.gitlive:firebase-functions", version.ref = "firebaseGitLive" }

jetbrains-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "jetbrainsLifecycle" }
jetbrains-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "jetbrainsNavigation" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinComposeViewModel" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

mockK = { module = "io.mockk:mockk", version.ref = "mockK" }

moko-resources = { module = "dev.icerock.moko:resources", version.ref = "mokoResources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "mokoResources" }
moko-resources-test = { module = "dev.icerock.moko:resources-test", version.ref = "mokoResources" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }
